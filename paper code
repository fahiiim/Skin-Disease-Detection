{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":11557260,"sourceType":"datasetVersion","datasetId":7246604}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# IEEE Access Paper: A Deep Learning Approach Based on Explainable Artificial Intelligence for Skin Lesion Classification\n**By: University of Engineering and Technology,Lahore,pakistan**","metadata":{}},{"cell_type":"markdown","source":"# Import Libraries","metadata":{}},{"cell_type":"code","source":"# Import libraries\nimport numpy as np\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torchvision import transforms\nfrom torchvision.models import resnet18, ResNet18_Weights\nfrom torch.utils.data import DataLoader, Dataset\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix, roc_auc_score\nfrom torch.amp import GradScaler, autocast\nimport cv2\nfrom skimage.feature import graycomatrix, graycoprops\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom lime import lime_image\nfrom skimage.segmentation import mark_boundaries\nfrom PIL import Image\nimport os\nimport multiprocessing as mp\nfrom functools import partial","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:22:51.448235Z","iopub.execute_input":"2025-04-25T17:22:51.448529Z","iopub.status.idle":"2025-04-25T17:22:51.454868Z","shell.execute_reply.started":"2025-04-25T17:22:51.448506Z","shell.execute_reply":"2025-04-25T17:22:51.453903Z"}},"outputs":[],"execution_count":18},{"cell_type":"markdown","source":"# GPU Information","metadata":{}},{"cell_type":"code","source":"!nvidia-smi","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:22:51.455989Z","iopub.execute_input":"2025-04-25T17:22:51.456317Z","iopub.status.idle":"2025-04-25T17:22:51.722714Z","shell.execute_reply.started":"2025-04-25T17:22:51.456296Z","shell.execute_reply":"2025-04-25T17:22:51.721957Z"}},"outputs":[{"name":"stdout","text":"Fri Apr 25 17:22:51 2025       \n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  Tesla T4                       Off |   00000000:00:04.0 Off |                    0 |\n| N/A   77C    P0             34W /   70W |     105MiB /  15360MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  Tesla T4                       Off |   00000000:00:05.0 Off |                    0 |\n| N/A   43C    P8              9W /   70W |       3MiB /  15360MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n                                                                                         \n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n+-----------------------------------------------------------------------------------------+\n","output_type":"stream"}],"execution_count":19},{"cell_type":"code","source":"# Step 1: Fix GPU detection\nprint(\"=== Starting GPU Setup ===\")\nprint(\"Uninstalling existing PyTorch packages...\")\n!pip uninstall -y torch torchvision torchaudio\nprint(\"Installing PyTorch with CUDA 11.8 support...\")\n!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n\n# Verify GPU availability\nprint(\"\\n=== Verifying GPU Availability ===\")\nprint(\"CUDA Available:\", torch.cuda.is_available())\nprint(\"CUDA Version:\", torch.version.cuda)\nprint(\"Number of GPUs:\", torch.cuda.device_count())\nif torch.cuda.is_available():\n    print(\"GPU Name:\", torch.cuda.get_device_name(0))\nelse:\n    print(\"GPU not detected. Running on CPU. Please check PyTorch installation or Kaggle accelerator settings.\")\n    print(\"Falling back to CPU for now. We may switch to TensorFlow if this persists.\")\n\n# Define device early\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nprint(f\"Using device: {device}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:22:51.724251Z","iopub.execute_input":"2025-04-25T17:22:51.724514Z","iopub.status.idle":"2025-04-25T17:23:24.372901Z","shell.execute_reply.started":"2025-04-25T17:22:51.724492Z","shell.execute_reply":"2025-04-25T17:23:24.372155Z"}},"outputs":[{"name":"stdout","text":"=== Starting GPU Setup ===\nUninstalling existing PyTorch packages...\nFound existing installation: torch 2.7.0+cu118\nUninstalling torch-2.7.0+cu118:\n  Successfully uninstalled torch-2.7.0+cu118\nFound existing installation: torchvision 0.22.0+cu118\nUninstalling torchvision-0.22.0+cu118:\n  Successfully uninstalled torchvision-0.22.0+cu118\nFound existing installation: torchaudio 2.7.0+cu118\nUninstalling torchaudio-2.7.0+cu118:\n  Successfully uninstalled torchaudio-2.7.0+cu118\nInstalling PyTorch with CUDA 11.8 support...\nLooking in indexes: https://download.pytorch.org/whl/cu118\nCollecting torch\n  Using cached https://download.pytorch.org/whl/cu118/torch-2.7.0%2Bcu118-cp311-cp311-manylinux_2_28_x86_64.whl.metadata (28 kB)\nCollecting torchvision\n  Using cached https://download.pytorch.org/whl/cu118/torchvision-0.22.0%2Bcu118-cp311-cp311-manylinux_2_28_x86_64.whl.metadata (6.1 kB)\nCollecting torchaudio\n  Using cached https://download.pytorch.org/whl/cu118/torchaudio-2.7.0%2Bcu118-cp311-cp311-manylinux_2_28_x86_64.whl.metadata (6.6 kB)\nRequirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch) (3.18.0)\nRequirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch) (4.13.1)\nRequirement already satisfied: sympy>=1.13.3 in /usr/local/lib/python3.11/dist-packages (from torch) (1.13.3)\nRequirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch) (3.4.2)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch) (3.1.6)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch) (2025.3.2)\nRequirement already satisfied: nvidia-cuda-nvrtc-cu11==11.8.89 in /usr/local/lib/python3.11/dist-packages (from torch) (11.8.89)\nRequirement already satisfied: nvidia-cuda-runtime-cu11==11.8.89 in /usr/local/lib/python3.11/dist-packages (from torch) (11.8.89)\nRequirement already satisfied: nvidia-cuda-cupti-cu11==11.8.87 in /usr/local/lib/python3.11/dist-packages (from torch) (11.8.87)\nRequirement already satisfied: nvidia-cudnn-cu11==9.1.0.70 in /usr/local/lib/python3.11/dist-packages (from torch) (9.1.0.70)\nRequirement already satisfied: nvidia-cublas-cu11==11.11.3.6 in /usr/local/lib/python3.11/dist-packages (from torch) (11.11.3.6)\nRequirement already satisfied: nvidia-cufft-cu11==10.9.0.58 in /usr/local/lib/python3.11/dist-packages (from torch) (10.9.0.58)\nRequirement already satisfied: nvidia-curand-cu11==10.3.0.86 in /usr/local/lib/python3.11/dist-packages (from torch) (10.3.0.86)\nRequirement already satisfied: nvidia-cusolver-cu11==11.4.1.48 in /usr/local/lib/python3.11/dist-packages (from torch) (11.4.1.48)\nRequirement already satisfied: nvidia-cusparse-cu11==11.7.5.86 in /usr/local/lib/python3.11/dist-packages (from torch) (11.7.5.86)\nRequirement already satisfied: nvidia-nccl-cu11==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch) (2.21.5)\nRequirement already satisfied: nvidia-nvtx-cu11==11.8.86 in /usr/local/lib/python3.11/dist-packages (from torch) (11.8.86)\nRequirement already satisfied: triton==3.3.0 in /usr/local/lib/python3.11/dist-packages (from torch) (3.3.0)\nRequirement already satisfied: setuptools>=40.8.0 in /usr/local/lib/python3.11/dist-packages (from triton==3.3.0->torch) (75.1.0)\nRequirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from torchvision) (1.26.4)\nRequirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.11/dist-packages (from torchvision) (11.1.0)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy>=1.13.3->torch) (1.3.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch) (3.0.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision) (2025.1.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision) (2022.1.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy->torchvision) (2.4.1)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->torchvision) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->torchvision) (2022.1.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy->torchvision) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy->torchvision) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy->torchvision) (2024.2.0)\nUsing cached https://download.pytorch.org/whl/cu118/torch-2.7.0%2Bcu118-cp311-cp311-manylinux_2_28_x86_64.whl (955.6 MB)\nUsing cached https://download.pytorch.org/whl/cu118/torchvision-0.22.0%2Bcu118-cp311-cp311-manylinux_2_28_x86_64.whl (6.7 MB)\nUsing cached https://download.pytorch.org/whl/cu118/torchaudio-2.7.0%2Bcu118-cp311-cp311-manylinux_2_28_x86_64.whl (3.3 MB)\nInstalling collected packages: torch, torchaudio, torchvision\n\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\nfastai 2.7.18 requires torch<2.6,>=1.10, but you have torch 2.7.0+cu118 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0mSuccessfully installed torch-2.7.0+cu118 torchaudio-2.7.0+cu118 torchvision-0.22.0+cu118\n\n=== Verifying GPU Availability ===\nCUDA Available: True\nCUDA Version: 11.8\nNumber of GPUs: 2\nGPU Name: Tesla T4\nUsing device: cuda\n","output_type":"stream"}],"execution_count":20},{"cell_type":"markdown","source":"# Data Collection","metadata":{}},{"cell_type":"code","source":"# 2. Data Collection: Load DermaMNIST dataset\nprint(\"\\n=== Loading DermaMNIST Dataset ===\")\ndataset_path = \"/kaggle/input/dermamnist/dermamnist_224.npz\"\ndata = np.load(dataset_path)\ntrain_images = data['train_images']\ntrain_labels = data['train_labels'].flatten()\nval_images = data['val_images']\nval_labels = data['val_labels'].flatten()\ntest_images = data['test_images']\ntest_labels = data['test_labels'].flatten()\n\n# Class names for DermaMNIST\nclass_names = [\n    'basal cell carcinoma', 'squamous cell carcinoma', 'melanoma',\n    'actinic keratosis', 'benign keratosis', 'dermatofibroma', 'vascular lesion'\n]\nprint(\"Number of training images:\", len(train_images))\nprint(\"Number of validation images:\", len(val_images))\nprint(\"Number of test images:\", len(test_images))\nprint(\"Class distribution (train):\", np.bincount(train_labels))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:23:24.373817Z","iopub.execute_input":"2025-04-25T17:23:24.374118Z","iopub.status.idle":"2025-04-25T17:23:36.141699Z","shell.execute_reply.started":"2025-04-25T17:23:24.374094Z","shell.execute_reply":"2025-04-25T17:23:36.140924Z"}},"outputs":[{"name":"stdout","text":"\n=== Loading DermaMNIST Dataset ===\nNumber of training images: 7007\nNumber of validation images: 1003\nNumber of test images: 2005\nClass distribution (train): [ 228  359  769   80  779 4693   99]\n","output_type":"stream"}],"execution_count":21},{"cell_type":"markdown","source":"# Step-1: Image Preprocessing & Segmentation  \nTo enhance image quality and focus on the lesion areas, the following preprocessing steps are applied:​\n\n1.  **Objective:** Enhance image quality, standardize dimensions, and focus on regions of interest (ROIs).\n\n    I’ll preprocess images by:\n    \n    * Applying noise reduction (Gaussian blur).\n    * Resizing to 224x224 (standard for models like ResNet).\n    * Normalizing pixel values to [0, 1].\n    * Cropping ROIs (simplified to central cropping for now).\n1. **Implementation:**\n\nSince the dataset is large, we’ll preprocess images on-the-fly during training to save memory, using a generator.\nWe’ll assume metadata.csv has columns like isic_id (image filename without extension) and diagnosis (label).","metadata":{}},{"cell_type":"code","source":"# 3. Preprocessing: Precompute Segmentation and GLCM Features with Multiprocessing\nprint(\"\\n=== Preprocessing: Segmentation and GLCM Feature Extraction ===\")\n\ndef segment_image(image):\n    img = np.array(image)\n    mask = np.zeros(img.shape[:2], np.uint8)\n    bgdModel = np.zeros((1, 65), np.float64)\n    fgdModel = np.zeros((1, 65), np.float64)\n    height, width = img.shape[:2]\n    rect = (10, 10, width-20, height-20)\n    # Reduce iterations for faster processing (from 5 to 3)\n    cv2.grabCut(img, mask, rect, bgdModel, fgdModel, 3, cv2.GC_INIT_WITH_RECT)\n    mask2 = np.where((mask == 2) | (mask == 0), 0, 1).astype('uint8')\n    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5, 5))\n    mask2 = cv2.dilate(mask2, kernel, iterations=1)\n    segmented = img * mask2[:, :, np.newaxis]\n    return segmented\n\ndef compute_glcm_features(image):\n    img = np.array(Image.fromarray(image).convert('L'))\n    glcm = graycomatrix(img, distances=[5], angles=[0], levels=256, symmetric=True, normed=True)\n    features = {\n        'contrast': graycoprops(glcm, 'contrast')[0, 0],\n        'correlation': graycoprops(glcm, 'correlation')[0, 0],\n        'energy': graycoprops(glcm, 'energy')[0, 0],\n        'homogeneity': graycoprops(glcm, 'homogeneity')[0, 0]\n    }\n    return np.array([features['contrast'], features['correlation'], features['energy'], features['homogeneity']])\n\ndef process_image(img, idx, total):\n    if idx % 500 == 0:\n        print(f\"Processed {idx}/{total} images...\")\n    segmented = segment_image(img)\n    glcm = compute_glcm_features(segmented)\n    return segmented, glcm\n\n# Precompute and save segmented images and GLCM features using multiprocessing\noutput_dir = \"/kaggle/working/preprocessed_dermamnist\"\nos.makedirs(output_dir, exist_ok=True)\n\ndef preprocess_and_save(images, split_name):\n    segmented_path = os.path.join(output_dir, f\"{split_name}_segmented.npy\")\n    glcm_path = os.path.join(output_dir, f\"{split_name}_glcm.npy\")\n    \n    if os.path.exists(segmented_path) and os.path.exists(glcm_path):\n        print(f\"Loading precomputed {split_name} data...\")\n        segmented_images = np.load(segmented_path)\n        glcm_features = np.load(glcm_path)\n    else:\n        print(f\"Preprocessing {split_name} data ({len(images)} images) with multiprocessing...\")\n        num_cores = mp.cpu_count()\n        print(f\"Using {num_cores} CPU cores for preprocessing.\")\n        pool = mp.Pool(processes=num_cores)\n        process_func = partial(process_image, total=len(images))\n        results = pool.starmap(process_func, [(img, i) for i, img in enumerate(images)])\n        pool.close()\n        pool.join()\n        segmented_images = np.array([r[0] for r in results])\n        glcm_features = np.array([r[1] for r in results])\n        # Save to disk\n        np.save(segmented_path, segmented_images)\n        np.save(glcm_path, glcm_features)\n        print(f\"Saved precomputed {split_name} data.\")\n    \n    return segmented_images, glcm_features\n\n# Preprocess all splits\nprint(\"Preprocessing training set...\")\ntrain_segmented, train_glcm = preprocess_and_save(train_images, \"train\")\nprint(\"Preprocessing validation set...\")\nval_segmented, val_glcm = preprocess_and_save(val_images, \"val\")\nprint(\"Preprocessing test set...\")\ntest_segmented, test_glcm = preprocess_and_save(test_images, \"test\")\n\n# Custom Dataset for DermaMNIST\nclass DermaMNISTDataset(Dataset):\n    def __init__(self, images, glcm_features, labels, transform=None):\n        self.images = images\n        self.glcm_features = glcm_features\n        self.labels = labels\n        self.transform = transform\n\n    def __len__(self):\n        return len(self.images)\n\n    def __getitem__(self, idx):\n        image = Image.fromarray(self.images[idx])\n        glcm_features = self.glcm_features[idx]\n        label = self.labels[idx]\n        if self.transform:\n            image = self.transform(image)\n        return image, glcm_features, label","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:23:36.143373Z","iopub.execute_input":"2025-04-25T17:23:36.143623Z","iopub.status.idle":"2025-04-25T17:23:36.660309Z","shell.execute_reply.started":"2025-04-25T17:23:36.143607Z","shell.execute_reply":"2025-04-25T17:23:36.659501Z"}},"outputs":[{"name":"stdout","text":"\n=== Preprocessing: Segmentation and GLCM Feature Extraction ===\nPreprocessing training set...\nLoading precomputed train data...\nPreprocessing validation set...\nLoading precomputed val data...\nPreprocessing test set...\nLoading precomputed test data...\n","output_type":"stream"}],"execution_count":22},{"cell_type":"markdown","source":"# Step-2: Data Augmentation\nTo increase data diversity and prevent overfitting, the following augmentation techniques are applied:​\n\n* **Rotation:** Random rotations at various angles.​\n\n* **Flipping:** Horizontal and vertical flips.​\n\n* **Cropping:** Random crops to simulate zoom.​\n\n* **Brightness and Contrast Adjustment:** Randomly altering brightness and contrast levels.​\n\n* **Noise Addition:** Introducing random noise to images.","metadata":{}},{"cell_type":"code","source":"# Transforms\ntrain_transforms = transforms.Compose([\n    transforms.RandomAffine(degrees=30, shear=10, scale=(0.8, 1.2)),\n    transforms.RandomHorizontalFlip(),\n    transforms.RandomVerticalFlip(),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n    transforms.RandomErasing(p=0.3, scale=(0.02, 0.1))\n])\nval_transforms = transforms.Compose([\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:23:36.661058Z","iopub.execute_input":"2025-04-25T17:23:36.661276Z","iopub.status.idle":"2025-04-25T17:23:36.666790Z","shell.execute_reply.started":"2025-04-25T17:23:36.661259Z","shell.execute_reply":"2025-04-25T17:23:36.665943Z"}},"outputs":[],"execution_count":23},{"cell_type":"markdown","source":"# Step-3: Model Training with ResNet-18\nUtilizing transfer learning, a pre-trained ResNet-18 model is fine-tuned for skin lesion classification. The final fully connected layer is modified to output predictions for the nine classes present in the ISIC 2019 dataset.","metadata":{}},{"cell_type":"code","source":"# (Previous code up to \"Creating Datasets and DataLoaders\" remains unchanged)\nprint(\"\\n=== Creating Datasets and DataLoaders ===\")\ntrain_dataset = DermaMNISTDataset(train_segmented, train_glcm, train_labels, transform=train_transforms)\nval_dataset = DermaMNISTDataset(val_segmented, val_glcm, val_labels, transform=val_transforms)\ntest_dataset = DermaMNISTDataset(test_segmented, test_glcm, test_labels, transform=val_transforms)\n\n# Create DataLoaders\nbatch_size = 32\ntrain_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=1, pin_memory=True)\nval_loader = DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=1, pin_memory=True)\ntest_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=1, pin_memory=True)\nprint(f\"Created DataLoaders with batch size {batch_size}\")\n\n# 4. Classification: ResNet18 + MLP for Feature Fusion\nprint(\"\\n=== Setting Up Model ===\")\n\nclass CombinedModel(nn.Module):\n    def __init__(self, num_classes, glcm_feature_dim=4):\n        super(CombinedModel, self).__init__()\n        self.resnet = resnet18(weights=ResNet18_Weights.IMAGENET1K_V1)\n        resnet_fc_dim = self.resnet.fc.in_features\n        self.resnet.fc = nn.Identity()\n        self.glcm_fc = nn.Linear(glcm_feature_dim, 64)\n        self.combined_fc = nn.Sequential(\n            nn.Linear(resnet_fc_dim + 64, 512),\n            nn.ReLU(),\n            nn.Dropout(0.5),\n            nn.Linear(512, num_classes)\n        )\n\n    def forward(self, x, glcm_features):\n        resnet_features = self.resnet(x)\n        glcm_features = self.glcm_fc(glcm_features)\n        combined = torch.cat((resnet_features, glcm_features), dim=1)\n        output = self.combined_fc(combined)\n        return output\n\n# Normalize GLCM features\nprint(\"Normalizing GLCM features...\")\nglcm_scaler = StandardScaler()  # Renamed to avoid conflict\nglcm_scaler.fit(train_glcm)\n\n# Compute class weights\nprint(\"Computing class weights...\")\nclass_counts = np.bincount(train_labels)\nclass_weights = torch.tensor([1.0 / count for count in class_counts], dtype=torch.float)\nclass_weights = class_weights / class_weights.sum() * len(class_counts)\nclass_weights = class_weights.to(device)\n\n# Initialize model\nmodel = CombinedModel(num_classes=len(class_names)).to(device)\nprint(f\"Model initialized on device: {next(model.parameters()).device}\")\n\n# Loss, optimizer, and scaler\ncriterion = nn.CrossEntropyLoss(weight=class_weights)\noptimizer = optim.Adam(model.parameters(), lr=0.0001)\nscaler = GradScaler('cuda' if torch.cuda.is_available() else 'cpu')  # Keep this as 'scaler'\n\n# Training loop\nprint(\"\\n=== Starting Training ===\")\nnum_epochs = 15\nbest_val_acc = 0.0\nfor epoch in range(num_epochs):\n    print(f\"\\nStarting Epoch {epoch+1}/{num_epochs}\")\n    model.train()\n    running_loss = 0.0\n    correct = 0\n    total = 0\n    for i, data in enumerate(train_loader):\n        if i % 50 == 0:\n            print(f\"  Batch {i}/{len(train_loader)}\")\n        inputs, glcm_features, labels = data\n        inputs, labels = inputs.to(device), labels.to(device)\n        glcm_features = glcm_scaler.transform(glcm_features.numpy())  # Use glcm_scaler here\n        glcm_features = torch.tensor(glcm_features, dtype=torch.float32).to(device)\n        optimizer.zero_grad()\n        with autocast(device_type='cuda' if torch.cuda.is_available() else 'cpu'):\n            outputs = model(inputs, glcm_features)\n            loss = criterion(outputs, labels)\n        scaler.scale(loss).backward()\n        scaler.step(optimizer)\n        scaler.update()\n        running_loss += loss.item()\n        _, predicted = torch.max(outputs, 1)\n        total += labels.size(0)\n        correct += (predicted == labels).sum().item()\n    train_acc = 100 * correct / total\n    print(f\"Epoch {epoch+1}, Loss: {running_loss/len(train_loader):.4f}, Train Acc: {train_acc:.2f}%\")\n\n    # Validation\n    print(f\"Validating Epoch {epoch+1}...\")\n    model.eval()\n    correct = 0\n    total = 0\n    with torch.no_grad():\n        for data in val_loader:\n            inputs, glcm_features, labels = data\n            inputs, labels = inputs.to(device), labels.to(device)\n            glcm_features = glcm_scaler.transform(glcm_features.numpy())  # Use glcm_scaler here\n            glcm_features = torch.tensor(glcm_features, dtype=torch.float32).to(device)\n            with autocast(device_type='cuda' if torch.cuda.is_available() else 'cpu'):\n                outputs = model(inputs, glcm_features)\n            _, predicted = torch.max(outputs, 1)\n            total += labels.size(0)\n            correct += (predicted == labels).sum().item()\n    val_acc = 100 * correct / total\n    print(f\"Validation Acc: {val_acc:.2f}%\")\n    if val_acc > best_val_acc:\n        best_val_acc = val_acc\n        torch.save(model.state_dict(), \"best_model.pth\")\n        print(\"Saved best model with validation accuracy:\", best_val_acc)\n    if val_acc > 95:\n        print(\"Validation accuracy > 95%, stopping training.\")\n        break\n\n# Clear memory after training\ntorch.cuda.empty_cache()\nprint(\"Training complete, GPU memory cleared.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:32:33.847914Z","iopub.execute_input":"2025-04-25T17:32:33.848652Z","iopub.status.idle":"2025-04-25T17:36:28.475410Z","shell.execute_reply.started":"2025-04-25T17:32:33.848624Z","shell.execute_reply":"2025-04-25T17:36:28.474646Z"}},"outputs":[{"name":"stdout","text":"\n=== Creating Datasets and DataLoaders ===\nCreated DataLoaders with batch size 32\n\n=== Setting Up Model ===\nNormalizing GLCM features...\nComputing class weights...\nModel initialized on device: cuda:0\n\n=== Starting Training ===\n\nStarting Epoch 1/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 1, Loss: 1.4421, Train Acc: 51.86%\nValidating Epoch 1...\nValidation Acc: 58.92%\nSaved best model with validation accuracy: 58.92323030907278\n\nStarting Epoch 2/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 2, Loss: 1.0766, Train Acc: 60.82%\nValidating Epoch 2...\nValidation Acc: 58.03%\n\nStarting Epoch 3/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 3, Loss: 0.9737, Train Acc: 62.87%\nValidating Epoch 3...\nValidation Acc: 63.01%\nSaved best model with validation accuracy: 63.01096709870389\n\nStarting Epoch 4/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 4, Loss: 0.9192, Train Acc: 65.03%\nValidating Epoch 4...\nValidation Acc: 62.71%\n\nStarting Epoch 5/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 5, Loss: 0.8472, Train Acc: 65.41%\nValidating Epoch 5...\nValidation Acc: 65.90%\nSaved best model with validation accuracy: 65.90229312063809\n\nStarting Epoch 6/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 6, Loss: 0.8370, Train Acc: 66.46%\nValidating Epoch 6...\nValidation Acc: 59.52%\n\nStarting Epoch 7/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 7, Loss: 0.8009, Train Acc: 67.30%\nValidating Epoch 7...\nValidation Acc: 65.20%\n\nStarting Epoch 8/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 8, Loss: 0.7062, Train Acc: 69.64%\nValidating Epoch 8...\nValidation Acc: 71.68%\nSaved best model with validation accuracy: 71.68494516450649\n\nStarting Epoch 9/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 9, Loss: 0.7386, Train Acc: 68.29%\nValidating Epoch 9...\nValidation Acc: 61.81%\n\nStarting Epoch 10/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 10, Loss: 0.6906, Train Acc: 70.93%\nValidating Epoch 10...\nValidation Acc: 75.97%\nSaved best model with validation accuracy: 75.97208374875373\n\nStarting Epoch 11/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 11, Loss: 0.6977, Train Acc: 70.62%\nValidating Epoch 11...\nValidation Acc: 66.00%\n\nStarting Epoch 12/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 12, Loss: 0.6473, Train Acc: 72.24%\nValidating Epoch 12...\nValidation Acc: 68.10%\n\nStarting Epoch 13/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 13, Loss: 0.6159, Train Acc: 73.14%\nValidating Epoch 13...\nValidation Acc: 71.59%\n\nStarting Epoch 14/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 14, Loss: 0.6396, Train Acc: 72.17%\nValidating Epoch 14...\nValidation Acc: 66.00%\n\nStarting Epoch 15/15\n  Batch 0/219\n  Batch 50/219\n  Batch 100/219\n  Batch 150/219\n  Batch 200/219\nEpoch 15, Loss: 0.6215, Train Acc: 73.41%\nValidating Epoch 15...\nValidation Acc: 69.59%\nTraining complete, GPU memory cleared.\n","output_type":"stream"}],"execution_count":25},{"cell_type":"markdown","source":"# Model Explainability with the LIME + GradCam\nTo interpret the model's predictions, LIME (Local Interpretable Model-Agnostic Explanations) is employed. LIME provides visual explanations by highlighting regions in the image that most influenced the model's decision.","metadata":{}},{"cell_type":"code","source":"print(\"\\n=== Running Explainability Analysis ===\")\n\n# Grad-CAM implementation\nclass GradCAM:\n    def __init__(self, model, target_layer):\n        self.model = model\n        self.target_layer = target_layer\n        self.gradients = None\n        self.hook_handles = []\n        self._register_hooks()\n\n    def _register_hooks(self):\n        def forward_hook(module, input, output):\n            self.activations = output\n        def backward_hook(module, grad_in, grad_out):\n            self.gradients = grad_out[0]\n        self.hook_handles.append(self.target_layer.register_forward_hook(forward_hook))\n        self.hook_handles.append(self.target_layer.register_backward_hook(backward_hook))\n\n    def __call__(self, x, glcm_features, index=None):\n        self.model.eval()\n        output = self.model(x, glcm_features)\n        if index is None:\n            index = torch.argmax(output, dim=1)\n        self.model.zero_grad()\n        score = output[0, index]\n        score.backward()\n        weights = torch.mean(self.gradients, dim=[2, 3], keepdim=True)\n        cam = torch.sum(weights * self.activations, dim=1)\n        cam = torch.relu(cam)\n        cam = cam - cam.min()\n        cam = cam / (cam.max() + 1e-8)\n        return cam.cpu().detach().numpy()\n\n# Explainability\nprint(\"Preparing sample for LIME and Grad-CAM...\")\nmodel.eval()\nsample_idx = 0\nsample_image = Image.fromarray(val_segmented[sample_idx])\nsample_glcm = val_glcm[sample_idx]\nsample_glcm = glcm_scaler.transform([sample_glcm])[0]  # Use glcm_scaler here\nsample_glcm = torch.tensor(sample_glcm, dtype=torch.float32).unsqueeze(0).to(device)\n\n# Preprocess for LIME and Grad-CAM\nlime_transform = transforms.Compose([\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n])\nsample_tensor = lime_transform(sample_image).unsqueeze(0).to(device)\n\n# LIME\nprint(\"Running LIME explanation...\")\ndef predict_fn(images):\n    images = torch.from_numpy(images.transpose((0, 3, 1, 2))).float().to(device)\n    images = images / 255.0\n    images = transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])(images)\n    glcm_batch = sample_glcm.repeat(images.shape[0], 1)\n    with torch.no_grad():\n        outputs = model(images, glcm_batch)\n    return outputs.cpu().numpy()\n\nexplainer = lime_image.LimeImageExplainer()\nexplanation = explainer.explain_instance(\n    np.array(sample_image),\n    predict_fn,\n    top_labels=5,\n    num_samples=500\n)\ntemp, mask = explanation.get_image_and_mask(explanation.top_labels[0], positive_only=True, num_features=5)\nplt.imshow(mark_boundaries(np.array(sample_image)/255.0, mask))\nplt.title(\"LIME Explanation\")\nplt.show()\n\n# Grad-CAM\nprint(\"Running Grad-CAM explanation...\")\ngradcam = GradCAM(model, model.resnet.layer4[-1])\ncam = gradcam(sample_tensor, sample_glcm)\ncam = cv2.resize(cam[0], (224, 224))\nplt.imshow(np.array(sample_image))\nplt.imshow(cam, cmap='jet', alpha=0.5)\nplt.title(\"Grad-CAM\")\nplt.show()\n\ntorch.cuda.empty_cache()\nprint(\"Explainability analysis complete, GPU memory cleared.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:38:20.866683Z","iopub.execute_input":"2025-04-25T17:38:20.867009Z","iopub.status.idle":"2025-04-25T17:38:24.416721Z","shell.execute_reply.started":"2025-04-25T17:38:20.866983Z","shell.execute_reply":"2025-04-25T17:38:24.416106Z"}},"outputs":[{"name":"stdout","text":"\n=== Running Explainability Analysis ===\nPreparing sample for LIME and Grad-CAM...\nRunning LIME explanation...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/500 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3fdb1ddf750f4481842808ac1f739ee8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Running Grad-CAM explanation...\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py:1842: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.\n  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAakAAAGzCAYAAACVYeimAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOy9e7QlR3Ue/u3qvnPnPdLoMSPBSAjxECAQ2IDCD4wlW0CAYIgJ2IBtsL1wTMCOpeUEyw9AJCz5tRIvYxxnrSQQLyQTEzAmxCY2L+PEgA1YyICRkBCSkDSD3iONpJnbVfv3x967qrpPd58+5577GKk3HM051dXVffr0ra+/vb/am5iZMdpoo4022mib0NxGn8Boo4022mijddkIUqONNtpoo21aG0FqtNFGG220TWsjSI022mijjbZpbQSp0UYbbbTRNq2NIDXaaKONNtqmtRGkRhtttNFG27Q2gtRoo4022mib1kaQGm200UYbbdPaCFKjjbYJ7A1veAMe85jHbPRpjDbaprMRpEZ7xNsNN9yAt7zlLXjCE56A7du3Y/v27Xjyk5+MN7/5zbj66qs3+vRa7fDhw7jssstw3nnnYefOndi2bRvOPfdcvPWtb8Wtt97aus+rX/1qEBHe+ta3tm7/zGc+AyICEeH9739/a5/nPve5ICKce+65C/suo43WZzTm7hvtkWwf+9jH8CM/8iMoyxKve93rcN5558E5h2984xv48Ic/jBtvvBE33HADzjzzzDU9jze84Q34zGc+g29/+9tT+37rW9/CRRddhJtuugmvetWr8LznPQ9btmzB1VdfjT/6oz/C3r17ce2119b2OXz4MPbt24f9+/fDe48bb7wRRFTr85nPfAYXXnghtm7digsvvBB/9md/Vtv+7W9/G2eddRa2bt2Ks88+G1/96ldX/b1HG22alRt9AqONtlF2/fXX40d/9Edx5pln4pOf/CROO+202vbf+I3fwO///u/DuW6Hw5EjR7Bjx461PtVoVVXhh3/4h3Ho0CF85jOfwfOe97za9ne96134jd/4jYn9PvShD8F7j//23/4bfuAHfgCf/exn8f3f//2tx3jJS16Cj370o7jjjjtw8sknx/Yrr7wS+/btw+Mf/3jcfffdi/1io43WYaO7b7RHrP3mb/4mjhw5gve+970TAAUAZVni53/+53HgwAEAwnZ27tyJ66+/Hi95yUuwa9cuvO51rwMA/PVf/zVe9apX4YwzzsDy8jIOHDiAiy++GA8++ODEuB/5yEdw7rnnYuvWrTj33HPxJ3/yJ4PP+UMf+hC+8pWv4Fd+5VcmAAoAdu/ejXe9610T7VdccQVe8IIX4MILL8STnvQkXHHFFZ3HePnLX47l5WV88IMfrLVfeeWVePWrX42iKAaf72ijrdZGkBrtEWsf+9jH8LjHPQ7nn3/+4H2qqsKLXvQinHrqqfjt3/5tvPKVrwQAfPCDH8QDDzyAN73pTXj3u9+NF73oRXj3u9+Nn/iJn6jt/xd/8Rd45StfCSLC5Zdfjle84hX4yZ/8SXzxi18cdPyPfvSjAIAf//EfH3zOt956Kz796U/jNa95DQDgNa95Df7n//yfOHbsWGv/7du34+Uvfzn+6I/+KLZ95Stfwde+9jW89rWvHXzc0UZbiPFooz0C7d5772UA/IpXvGJi291338233357fD3wwAPMzPz617+eAfAv/dIvTexjfXK7/PLLmYj4xhtvjG1Pf/rT+bTTTuN77rkntv3FX/wFA+Azzzxz6nk/4xnP4D179gz4hsl++7d/m7dt28aHDx9mZuZrr72WAfCf/Mmf1Pp9+tOfZgD8wQ9+kD/2sY8xEfFNN93EzMz/5t/8G37sYx/LzMzf//3fz095ylNmOofRRpvXRiY12iPSDh8+DADYuXPnxLYLLrgAp5xySny95z3vqW1/05veNLHPtm3b4vsjR47gjjvuwP/3//1/YGb8/d//PQDgtttuw1VXXYXXv/712LNnT+z/ghe8AE9+8pMHn/euXbsG9TW74oor8NKXvjTu9/jHPx7f+73f2+vye+ELX4i9e/fiAx/4AJgZH/jAByITG2209bRRODHaI9Jswr7//vsntv3n//yfcd999+HQoUP4sR/7sdq2sizx6Ec/emKfm266CW9729vw0Y9+dEJUcO+99wIAbrzxRgACEk174hOfiC9/+cvx8+233w7vffy8c+dO7Ny5E7t378a3vvWtoV8T//iP/4i///u/x0/8xE/guuuui+0XXHAB3vOe9+Dw4cPYvXv3xH5LS0t41atehSuvvBLPfvazcfPNN4+uvtE2xEaQGu0RaXv27MFpp53WKqO2GFWbHHx5eXlC7ee9xwte8ALcddddeOtb34pzzjkHO3bswC233II3vOENCCHMfH7PetazIqgBwNvf/na84x3vwDnnnIO///u/x8033xwFHX1m650uvvhiXHzxxRPbP/ShD+Enf/InW/d97Wtfiz/4gz/AO97xDpx33nmD2d5ooy3SRpAa7RFrL33pS/Ff/st/wd/+7d/i2c9+9tzj/MM//AOuvfZa/Pf//t9rQom//Mu/rPWztVbf/OY3J8a45pprap+vuOKKmjLwsY99LADgZS97Gf7oj/4I73//+3HppZf2nhcz48orr8SFF16If/Wv/tXE9n/37/4drrjiik6Qet7znoczzjgDn/nMZ1pl7aONti62wTGx0UbbMLv22mt5+/bt/JSnPIUPHjw4sf1b3/oWA+Df+q3fYmYRTuzYsWOi39VXX80A+H3ve19sCyHwS1/6UgbA733ve2P7aoUTx44d46c+9am8Y8cO/pu/+ZuJ7YcPH+Zf/uVfZmbmv/7rv2YA/Id/+IetY73rXe9i5xzfcsstzFwXTph95CMf4be//e186623xrZRODHaetrIpEZ7xNrjH/94XHnllXjNa16DJz7xiTHjBDPjhhtuwJVXXgnnXGsMKrdzzjkHZ599Nn7xF38Rt9xyC3bv3o0PfehDrQteL7/8crz0pS/F8573PPzUT/0U7rrrLrz73e/GU57ylNb4WNOWlpbw4Q9/GBdddBGe//zn49WvfjWe+9znYmlpCV/72tdw5ZVX4sQTT8S73vUuXHHFFSiKAi996Utbx/qhH/oh/Mqv/Ao+8IEP4JJLLmnt8/KXvxwvf/nLp57XaKOtmW00So422kbbddddx29605v4cY97HG/dupW3bdvG55xzDv/sz/4sX3XVVbFfF5NiZv7617/OF110Ee/cuZNPPvlkfuMb38hf+cpXJpgUM/OHPvQhftKTnsTLy8v85Cc/mT/84Q/z61//+kFMyuzuu+/mt73tbfzUpz6Vt2/fzlu3buVzzz2XL730Ur7tttv42LFjfNJJJ/H3fd/39Y5z1lln8TOe8QxmbmdSbTYyqdHW08bcfaONNtpoo21aG9dJjTbaaKONtmltBKnRRhtttNE2rY0gNdpoo4022qa1EaRGG2200UbbtLZhIPWe97wHj3nMY7B161acf/75+Nu//duNOpXRRhtttNE2qW0ISP2P//E/cMkll+Dtb387vvzlL+O8887Di170Inz3u9/diNMZbbTR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\n"},"metadata":{}},{"name":"stdout","text":"Explainability analysis complete, GPU memory cleared.\n","output_type":"stream"}],"execution_count":26},{"cell_type":"markdown","source":"# Evaluation Matrix","metadata":{}},{"cell_type":"code","source":"print(\"\\n=== Evaluating Model on Test Set ===\")\nfrom sklearn.metrics import precision_score, recall_score, f1_score\n\n# Evaluate on test set\nmodel.eval()\nall_preds = []\nall_labels = []\nall_probs = []\nwith torch.no_grad():\n    for i, data in enumerate(test_loader):\n        if i % 20 == 0:\n            print(f\"Evaluating batch {i}/{len(test_loader)}...\")\n        inputs, glcm_features, labels = data\n        inputs, labels = inputs.to(device), labels.to(device)\n        glcm_features = glcm_scaler.transform(glcm_features.numpy())\n        glcm_features = torch.tensor(glcm_features, dtype=torch.float32).to(device)\n        with autocast(device_type='cuda' if torch.cuda.is_available() else 'cpu'):\n            outputs = model(inputs, glcm_features)\n        probs = torch.softmax(outputs, dim=1)\n        _, predicted = torch.max(outputs, 1)\n        all_preds.extend(predicted.cpu().numpy())\n        all_labels.extend(labels.cpu().numpy())\n        all_probs.extend(probs.cpu().numpy())\n\n# Convert all_probs to a NumPy array and verify shape\nall_probs = np.array(all_probs)\nall_labels = np.array(all_labels)\nall_preds = np.array(all_preds)\n\n# Debug: Check for numerical issues\nprint(f\"Shape of all_probs: {all_probs.shape}\")\nprint(f\"Sum of probabilities across classes (first 5 samples): {all_probs[:5].sum(axis=1)}\")\nprint(f\"Min sum of probabilities: {all_probs.sum(axis=1).min()}\")\nprint(f\"Max sum of probabilities: {all_probs.sum(axis=1).max()}\")\nprint(f\"Any NaN values in all_probs: {np.any(np.isnan(all_probs))}\")\nprint(f\"Any rows summing to zero: {np.any(all_probs.sum(axis=1) == 0)}\")\nprint(f\"Any negative probabilities: {np.any(all_probs < 0)}\")\n\n# Handle edge cases\n# 1. Replace NaN values with uniform probabilities\nif np.any(np.isnan(all_probs)):\n    print(\"Found NaN values in probabilities, replacing with uniform probabilities...\")\n    num_classes = all_probs.shape[1]\n    all_probs[np.isnan(all_probs)] = 1.0 / num_classes\n\n# 2. Replace rows summing to zero with uniform probabilities\nzero_sum_rows = all_probs.sum(axis=1) == 0\nif np.any(zero_sum_rows):\n    print(f\"Found {np.sum(zero_sum_rows)} rows summing to zero, replacing with uniform probabilities...\")\n    num_classes = all_probs.shape[1]\n    all_probs[zero_sum_rows] = 1.0 / num_classes\n\n# 3. Clip negative probabilities to zero\nif np.any(all_probs < 0):\n    print(\"Found negative probabilities, clipping to zero...\")\n    all_probs = np.maximum(all_probs, 0)\n\n# Normalize probabilities to ensure they sum to 1.0\nepsilon = 1e-10  # Small value to prevent division by zero\nprob_sums = all_probs.sum(axis=1, keepdims=True)\nprob_sums = np.maximum(prob_sums, epsilon)  # Avoid division by zero\nall_probs = all_probs / prob_sums\n\n# Verify normalization\nprint(f\"Sum of probabilities after normalization (first 5 samples): {all_probs[:5].sum(axis=1)}\")\nprint(f\"Min sum after normalization: {all_probs.sum(axis=1).min()}\")\nprint(f\"Max sum after normalization: {all_probs.sum(axis=1).max()}\")\nif not np.allclose(all_probs.sum(axis=1), 1.0, atol=1e-10):\n    print(\"Warning: Probabilities still do not sum to 1.0 after normalization!\")\nelse:\n    print(\"All probabilities sum to 1.0 within tolerance.\")\n\n# Compute metrics\nprint(\"Computing evaluation metrics...\")\naccuracy = 100 * (np.array(all_preds) == np.array(all_labels)).mean()\nprecision = precision_score(all_labels, all_preds, average='weighted')\nrecall = recall_score(all_labels, all_preds, average='weighted')\nf1 = f1_score(all_labels, all_preds, average='weighted')\n\n# Confusion Matrix\nprint(\"Plotting confusion matrix...\")\ncm = confusion_matrix(all_labels, all_preds)\nplt.figure(figsize=(8, 6))\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=class_names, yticklabels=class_names)\nplt.title(\"Confusion Matrix\")\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"True\")\nplt.xticks(rotation=45, ha='right')\nplt.yticks(rotation=0)\nplt.tight_layout()\nplt.show()\n\n# ROC-AUC\nprint(\"Computing ROC-AUC...\")\nroc_auc = roc_auc_score(all_labels, all_probs, multi_class='ovr')\nprint(f\"Test Accuracy: {accuracy:.2f}%\")\nprint(f\"Test Precision: {precision:.4f}\")\nprint(f\"Test Recall: {recall:.4f}\")\nprint(f\"Test F1 Score: {f1:.4f}\")\nprint(f\"ROC-AUC: {roc_auc:.4f}\")\n\ntorch.cuda.empty_cache()\nprint(\"Evaluation complete, GPU memory cleared.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:47:09.354231Z","iopub.execute_input":"2025-04-25T17:47:09.354789Z","iopub.status.idle":"2025-04-25T17:47:12.709349Z","shell.execute_reply.started":"2025-04-25T17:47:09.354761Z","shell.execute_reply":"2025-04-25T17:47:12.708308Z"}},"outputs":[{"name":"stdout","text":"\n=== Evaluating Model on Test Set ===\nEvaluating batch 0/63...\nEvaluating batch 20/63...\nEvaluating batch 40/63...\nEvaluating batch 60/63...\nShape of all_probs: (2005, 7)\nSum of probabilities across classes (first 5 samples): [1. 1. 1. 1. 1.]\nMin sum of probabilities: 0.99951171875\nMax sum of probabilities: 1.0\nAny NaN values in all_probs: False\nAny rows summing to zero: False\nAny negative probabilities: False\nSum of probabilities after normalization (first 5 samples): [1. 1. 1. 1. 1.]\nMin sum after normalization: 1.0\nMax sum after normalization: 1.0009765625\nWarning: Probabilities still do not sum to 1.0 after normalization!\nComputing evaluation metrics...\nPlotting confusion matrix...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Computing ROC-AUC...\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_281/2918654301.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     93\u001b[0m \u001b[0;31m# ROC-AUC\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     94\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Computing ROC-AUC...\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 95\u001b[0;31m \u001b[0mroc_auc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mroc_auc_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mall_labels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mall_probs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmulti_class\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'ovr'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     96\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Test Accuracy: {accuracy:.2f}%\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     97\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Test Precision: {precision:.4f}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_ranking.py\u001b[0m in \u001b[0;36mroc_auc_score\u001b[0;34m(y_true, y_score, average, sample_weight, max_fpr, multi_class, labels)\u001b[0m\n\u001b[1;32m    564\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmulti_class\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    565\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"multi_class must be in ('ovo', 'ovr')\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 566\u001b[0;31m         return _multiclass_roc_auc_score(\n\u001b[0m\u001b[1;32m    567\u001b[0m             \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmulti_class\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maverage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    568\u001b[0m         )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_ranking.py\u001b[0m in \u001b[0;36m_multiclass_roc_auc_score\u001b[0;34m(y_true, y_score, labels, multi_class, average, sample_weight)\u001b[0m\n\u001b[1;32m    637\u001b[0m     \u001b[0;31m# validation of the input y_score\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    638\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mallclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_score\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 639\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m    640\u001b[0m             \u001b[0;34m\"Target scores need to be probabilities for multiclass \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    641\u001b[0m             \u001b[0;34m\"roc_auc, i.e. they should sum up to 1.0 over classes\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes"],"ename":"ValueError","evalue":"Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes","output_type":"error"}],"execution_count":32},{"cell_type":"markdown","source":"# Visualizations","metadata":{}},{"cell_type":"code","source":"print(\"\\n=== Generating Pipeline Flowchart ===\")\nfrom matplotlib.patches import FancyArrowPatch\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_xlim(0, 10)\nax.set_ylim(0, 6)\nax.axis('off')\n\nstages = [\n    (\"Data\\nCollection\", 1, 5),\n    (\"Segmentation\", 3, 5),\n    (\"Feature\\nExtraction\", 5, 5),\n    (\"Classification\", 7, 5),\n    (\"Evaluation\", 7, 3),\n    (\"XAI\", 5, 3)\n]\n\nfor text, x, y in stages:\n    ax.text(x, y, text, ha='center', va='center', bbox=dict(facecolor='lightblue', edgecolor='black'))\n\nfor i in range(len(stages)-1):\n    x1, y1 = stages[i][1], stages[i][2]\n    x2, y2 = stages[i+1][1], stages[i+1][2]\n    if y1 == y2:\n        arrow = FancyArrowPatch((x1+0.5, y1), (x2-0.5, y2), arrowstyle='->', mutation_scale=20, color='black')\n    else:\n        arrow = FancyArrowPatch((x1, y1-0.5), (x2, y2+0.5), arrowstyle='->', mutation_scale=20, color='black')\n    ax.add_patch(arrow)\n\nplt.title(\"Pipeline Flowchart for DermaMNIST\")\nplt.show()\nprint(\"Flowchart generated.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-25T17:40:03.208650Z","iopub.execute_input":"2025-04-25T17:40:03.208936Z","iopub.status.idle":"2025-04-25T17:40:03.324905Z","shell.execute_reply.started":"2025-04-25T17:40:03.208915Z","shell.execute_reply":"2025-04-25T17:40:03.324163Z"}},"outputs":[{"name":"stdout","text":"\n=== Generating Pipeline Flowchart ===\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":"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kaOjo/r06aNLly7p+PHjku5/I16+fHnbk4UVK1YoQ4YM6tq1a4x9P/j04XHnSLLv2B719KZ06dKSpL1798bYR8eOHR967E8jructire39yPfh/iIGkXp5s2bku4/5bl27ZoaN25su25CQkLk6OioUqVKaevWrTG20alTp1i3XaVKFbunH6VKlZIk1atXT6lTp46x/GHvza1btxQSEqKyZcvKarVq3759se6vSZMmOnHihHbv3m3776OaTUWJeqpx4MABrV69+rHlo5s7d66mTp0qb29vrVq1Sr1791b+/PlVpUqVJ/q3DSBpo+kU8BKaNm2a8ubNKycnJ2XOnFn58uWTg8Pjv3fIkydPjGV58+bV119/LUk6ceKErFarPvroI3300UexbiM4OPixgeZBOXLksPs96gP11atXje43W7Zsqlq1apzrdebMGTk4OCh37tx2yz08POTm5qYzZ87Ylvn5+dk+YPv7+6t48eIqXry40qdPL39/f2XOnFkHDhyw+6B48uRJ5cuXT05Oj79VP+4cSfcD2fDhw7V06VIFBwfblb9+/XqMbXp7ez92v08iPufNdD2iRkOK+uAfFfKi+ik96MHRqZycnJQtW7ZYyz74HqRNm1aSlD179liXR39vAgMDNWTIEK1du9ZuuRT7eyNJRYoUka+vrxYvXiw3Nzd5eHg89Dge1LRpU40cOVIjRoyI0Xn7URwcHNS5c2d17txZV65c0S+//KLPP/9c69evV6NGjWzN/wBAImgAL6WSJUvaRp0yKWpo2t69ez/0G+gHP1zGhaOjY6zLrf92Zn1W+42ruAwTWr58ec2ePVsBAQHy9/eXn5+fLBaLypcvL39/f3l6eioyMtL2JCK+HneOJKlBgwbasWOH+vTpo8KFC8vV1VWRkZF68803Yx1W+FkP7RvX4VVN1iNq8IKo6yHquBcuXBjrnCkPhrwUKVI8NJQ/7D143HsTERGhatWq6e+//1a/fv3k6+urVKlS6dy5c2rVqtUjh3xu0qSJZsyYodSpU6thw4Zx+sIgqk6DBw9Wq1attGbNmjit8yB3d3fVqlVLtWrVUsWKFfXTTz/pzJkztr4cAEDQABBnUd/+Rnfs2DFbcxEfHx9J94epjc+TgaeVUPv18vJSZGSkjh8/rvz589uWX7p0SdeuXbP7wBUVIDZu3Kjdu3erf//+ku536p0x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GEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBxBA0AAAAAxhE0AAAAABhH0AAAAABgHEEDAAAAgHEEDQAAAADGETQAAAAAGEfQAAAAAGAcQQMAAACAcQQNAAAAAMYRNAAAAAAYR9AAAAAAYBxBAwAAAIBx/wefHkdXNyoF3wAAAABJRU5ErkJggg==\n"},"metadata":{}},{"name":"stdout","text":"Flowchart generated.\n","output_type":"stream"}],"execution_count":28}]}